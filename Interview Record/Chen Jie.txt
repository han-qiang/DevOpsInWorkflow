A: What is the name of the participant?

C: Chen Jie

A: What is the position?

C: Graduate students.

A: So what is your DevOps experience?

C: 1 year

A: What is the name of your department?

C: Graduate School

A: Then in what year did you join this department?

C: 19 years

A: So why did you make you contact this DevOps?

C: I haven't touched too much

A: What is your understanding of DevOps?

C: I knew that he needed to integrate development, operation and maintenance, but also to develop and operate. A technique of stringing together.

A: So how does the DevOps used in your team's development help you?

C: It may improve the efficiency of this development and avoid some mistakes. Because it is a complementary work,

A: Do you support or understand DevOps culture and practice?

C: Well, I support

A: Can you tell us whether your current team's culture is conducive to the implementation of this devops?

C: I don’t think this is easy to say. I don’t know enough about it. I feel that it’s a cooperative thing. So as long as one person doesn’t do it well, there may be defects on the whole.

A: So what is the size of your current team?

C: Eight

A: What is your main role in this team?

C: Development/Operation and Maintenance/Test

A: Do you have an iterative process in the development of this project?

C: Yes

A: How long is each iteration approximately?

C: Each reception depends on your needs. If there are some functions that need to be improved, it may take longer. If there are small changes, this will not take long.

A: What kind of development method does the team use?

C: Object-oriented development method

A: What kind of software did you develop?

C: What I developed is a subject evaluation system

A: What is the current progress of this project?

C: At present, I am mainly researching this algorithm, and I am still in the preliminary work.

A: Have you received some learning or training in the development of this project?

C: I went to that company for an internship

A; How long does the team have a discussion?


C: Mainly because when you encounter problems, or when you have new ideas, I will discuss them.

A: The seminar will help improve this project?

C: Hmm,

A: So are there experts to help guide or clean up some of the problems encountered in the project development.

C: Uh, from the experts, only the teacher may say some questions, others have not consulted others.

A: Which one do you think is more important for your project development in devops or the entire software life cycle of the software?

C: It's mainly the coding part. I think if it can't be realized by programming, there will be no way to talk about it.

A: What is your understanding of the deployment phase?

C: Put your own in the deployment phase. Deploy the project to a new environment

A: What is your understanding of the environmental stage?

C: Environmental stage, mainly the early stage. There may be some overlap with the deployment just now. In DevOps, everyone has a unified environment. This is because a unified development environment in the team will help development.

A: What is your understanding of the code phase?

C: The code stage, mainly programming implementation, and then testing software testing.

A: You have an understanding of project construction.

C: It is a compilation of the project after the code is written, it can include some tests,

A; What do you know about this version control?

C: If you make a mistake in your own programming, you can skip to the previous version so that you can find the problem and facilitate the next development.

A: What do you know about this demand stage?

C: The demand is mainly user-oriented. See what needs this user has.

A: Which one do you think has the most impact on your project?

C: Ah, I think it's that code stage now.

A: What problems have you encountered in project development?

C: For example, this one. The program cannot be written, the code cannot be adjusted, and there are abnormal problems during the test, and there is no way to solve it temporarily.

A: So have you checked the requirements during the requirement analysis phase of this project?

C: Relatively few, there is no formal or textual aspect to consider this thing

A: Do you think a good architecture will help this project?

C: It helps

A: Does the control version benefit your project development?

C: good for

A: What problems have you encountered in BPMN modeling in the requirements phase?

C: The node is sent wrong, or the process is wrong,

A: Does your team have a unified working environment to develop this project?

C: Yes

A: Have you monitored the running status of your software?

C: No

A: In the team development, if you share after encountering a problem, will you prevent the problem from happening again?

C: Yes.

A: Can a project in the production environment and the development environment run normally in these two links?

C: Yes, you can

A: So is the production environment and development environment similar?

C: consistent

A; What do you know about the integrated continuous integration and continuous deployment of this project?

C; don't know much

A: What is the frequency of project construction?

C; Well, mainly follow me according to my needs. If the code changes,

A: What is the frequency of project deployment?

C: Once a week.

A: How many times has this BPM version iterated so far?

C: Three times

A; Because this BPMN has changed. How many times has the project been built?

C; twice

A: How many times did BPMN change just because of requirements, and then change the code phase?

C: This is more, maybe five or six times

A: Because of changes in demand, the environment has also changed?

C: no no

A: How many times did BPMN fail to deploy normally?

C: Haven't encountered it yet

A: Do you think you are in these stages. Which one do you think is more important?

C: Demand

A: Requirements and construction?

C: Demand

A: Requirements and codes?

C: code,

A: Needs and environment?

C: Environment

A: Requirements and deployment?

C: deployment,

A: What do you think of version control and build?

C: equally important

A: Version control and code?

C: code

A: Version control and environment?

C: Environmental stage

A: Version control and deployment phase?

C: deployment

A: Which one do you think is more important between the construction phase and the code phase?

C: This should be the code stage

A: Build and environment?

C: Environment.

A: Build and deploy?

C: Deployment.

A: Then which one do you think is more important between the code phase and the environment phase?

C: code

A: Code and deployment phase?

C: code

A: What do you think of the environment and deployment stage?

C: Environmental stage.